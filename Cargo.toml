[package]
name = "lifegasm"
version = "0.1.0"
authors = ["erinpentecost <erin@pentecost.email>"]
edition = "2018"
description = "Learning experiment with WASM and Rust"
repository = "https://github.com/erinpentecost/lifegasm"
license = "All rights reserved."
exclude = ["*.js", "*.html"]

[lib]
crate-type = ["cdylib", "rlib"]

[dependencies]
futures = "0.3"
cfg-if = "0.1.10"
log = "0.4"
serde = "^1.0.59"
serde_derive = "^1.0.59"

# The `console_error_panic_hook` crate provides better debugging of panics by
# logging them with `console.error`. This is great for development, but requires
# all the `std::fmt` and `std::panicking` infrastructure, so isn't great for
# code size when deploying.
console_error_panic_hook = { version = "0.1.1", optional = true }

# Similar for console_log
console_log = { version = "0.1.2", optional = true }

# `wee_alloc` is a tiny allocator for wasm that is only ~1K in code size
# compared to the default allocator's ~10K. It is slower than the default
# allocator, however.
#
# Unfortunately, `wee_alloc` requires nightly Rust when targeting wasm for now.
wee_alloc = { version = "0.4.2", optional = true }

# Parse json in rust, etc.
wasm-bindgen = {version = "^0.2", features = ["serde-serialize"]}
wasm-bindgen-futures = "^0.4.10"

# For timing, and maybe webgl later on
web-sys = {version = "0.3.37", features = ["Performance", "WorkerGlobalScope", "Crypto", "CanvasRenderingContext2d", "ImageData", "HtmlCanvasElement"]}

js-sys = "0.3.37"

rgb = "0.8"

fixedbitset = "0.2.0"

# Strings and enums
strum = "0.18.0"
strum_macros = "0.18.0"
num_enum = "0.4.3"

# Math!
nalgebra = "0.18"

# Embed asset files
#rust-embed="5.5.1"

# Image loading, but this is pretty beefy
image = {version="0.23.3", features= ["png"]}

[features]
default = ["console_error_panic_hook", "console_log"]

[dev-dependencies]
wasm-bindgen-test = "0.2"
clippy = "0.0.302"

[profile.release]
# Tell `rustc` to optimize for small code size.
opt-level = "s"
# Also some other stuff.
lto = true
codegen-units = 1